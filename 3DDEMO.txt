IF _ASM THEN @INITACLS:CLEARASMGRP$="ASM_MEM"LOADER$="3DDEMO"EXEC "_ASMLOAD"IF !RESULT THEN ?"Error: Missing _ASMLOAD"END@INITCLEARDIM CUBE(24)'THIS IS A VERY PROCESSED'DEFAULT BLENDER CUBE.'YOU CAN'T REALLY TELL,'BUT IT IS.LOAD "GRP1:PO_CUBE",0IF !RESULT THEN ?"Error: Missing PO_CUBE":ENDC=0FOR K=0 TO 7 FOR J=0 TO 7  FOR I=0 TO 7 STEP 4   V=GSPOIT(1,I+8*K,J)/4096   V=V+GSPOIT(1,1+I+8*K,J)/16   V=V+GSPOIT(1,2+I+8*K,J)*16   V=V+GSPOIT(1,3+I+8*K,J)*4096   CUBE(C)=V   C=C+1   IF C==24 THEN I=9:J=9:K=9  NEXT NEXTNEXT'POINTER OFFSETSP1=1/4096P2=P1*2P4=P1*4P8=P1*8P128=P1*128'DISPCTL'HIGH BITS OF 3D PORTSIO3D=&H04000DCL=&H04000DCH=DISPCTLL+P2DC3L=&H04000+&H060*P1DC3H=DC3L+P2POWCNT1=&H04000+&H304*P1V_TEX=&H83V_TEXP=&H83M_MODE=IO3D+&H440*P1M_IDEN=IO3D+&H454*P1M_L4X4=IO3D+&H458*P1M_M3X3=IO3D+&H468*P1M_SCALE=IO3D+&H46C*P1M_TRANS=IO3D+&H470*P1V_COLOR=IO3D+&H480*P1V_TEXC=IO3D+&H488*P1V_VX10=IO3D+&H490*P1P_ATTR=IO3D+&H4A4*P1V_BEGIN=IO3D+&H500*P1V_END=IO3D+&H504*P1SWAPBUF=IO3D+&H540*P1VIEWPORT=IO3D+&H580*P1DC_3D=&B01000PC1_3D=&B01100A=&H000B=&H000GOSUB @3DINIT@MAINGOSUB @3DTESTVSYNC 1IF !(BUTTON() AND 16)GOTO @MAINGOSUB @3DOFFEND@3DINIT 'ENABLE 3D POKE2 DCL,PEEK(DCL) OR DC_3D 'POWER 3D HW OLDPC1=PEEK(POWCNT1) POKE2 POWCNT1,OLDPC1 OR PC1_3D 'INIT SOME 3D STUFF POKE4 SWAPBUF,0 POKE4 VIEWPORT,&HBFFF0+0RETURN @3DTEST IF BUTTON() AND 1 THEN A=A-P128 IF BUTTON() AND 2 THEN A=A+P128 IF BUTTON() AND 4 THEN B=B+P128 IF BUTTON() AND 8 THEN B=B-P128  'SET PROJ MTX 'STOLE IT FROM GBATEK â™¥ POKE4 M_MODE,0 POKE4 M_L4X4,SQR(3)*.75 POKE4 M_L4X4,0 POKE4 M_L4X4,0 POKE4 M_L4X4,0  POKE4 M_L4X4,0 POKE4 M_L4X4,SQR(3) POKE4 M_L4X4,0 POKE4 M_L4X4,0  POKE4 M_L4X4,0 POKE4 M_L4X4,0 POKE4 M_L4X4,-11/9 POKE4 M_L4X4,-1  POKE4 M_L4X4,0 POKE4 M_L4X4,0 POKE4 M_L4X4,-20/9 POKE4 M_L4X4,0 'MTX IS 20.12 FIXED POINT'SAME AS PTC NUMBERS!' POKE4 M_SCALE,0.3' POKE4 M_SCALE,0.3' POKE4 M_SCALE,0.3  POKE4 M_TRANS,0 'B POKE4 M_TRANS,0 'A POKE4 M_TRANS,-4 'ROTATE ABOUT X POKE4 M_M3X3,1 POKE4 M_M3X3,0 POKE4 M_M3X3,0  POKE4 M_M3X3,0 POKE4 M_M3X3,COS(A) POKE4 M_M3X3,SIN(A)  POKE4 M_M3X3,0 POKE4 M_M3X3,-SIN(A) POKE4 M_M3X3,COS(A)'ROTATE ABOUT Y POKE4 M_M3X3,COS(B) POKE4 M_M3X3,0 POKE4 M_M3X3,SIN(B)  POKE4 M_M3X3,0 POKE4 M_M3X3,1 POKE4 M_M3X3,0  POKE4 M_M3X3,-SIN(B) POKE4 M_M3X3,0 POKE4 M_M3X3,COS(B) ' POKE4 M_IDEN,0'CREATE A CUBEPOKE4 V_BEGIN,1*P1FOR I=0 TO 23 POKE4 V_COLOR,I*.3456+MAINCNTL*P1  POKE4 V_VX10,CUBE(I)NEXTPOKE4 V_END,0'SWAP BUFFERPOKE4 SWAPBUF,0RETURN@3DOFF POKE2 DCL,PEEK(DCL)AND NOT DC_3D POKE2 POWCNT1,OLDPC1END